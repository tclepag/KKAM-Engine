<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{28f76033-13d1-4869-a50a-79bf1768e349}</ProjectGuid>
    <RootNamespace>KKAMEngine</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <PropertyGroup>
    <HeaderFilesPath>$(ProjectDir)Include\</HeaderFilesPath>
    <SourceFilesPath>$(ProjectDir)Source\</SourceFilesPath>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClInclude>
      <Location>$(HeaderFilesPath)</Location>
    </ClInclude>
    <ClCompile>
      <Location>$(SourceFilesPath)</Location>
    </ClCompile>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnableManifest>true</VcpkgEnableManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir)Source;$(ProjectDir)vcpkg_installed\x64-windows\include;$(ProjectDir)Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>d3d11.lib;
dxgi.lib
;d3dcompiler.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>@echo Copying content folders...
xcopy "$(ProjectDir)Tools\*.*" "$(OutDir)Tools\" /Y /I /E
xcopy "$(ProjectDir)Docs\*.*" "$(OutDir)Docs\" /Y /I /E
xcopy "$(ProjectDir)Content\*.*" "$(OutDir)Content\" /Y /I /E


call "$(ProjectDir)Tools\move_shaders.bat" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>@echo Cleaning ALL contents from output directory...
if exist "$(OutDir)" (
  del /f /s /q "$(OutDir)*.*"
  for /d %%d in ("$(OutDir)*") do rd /s /q "%%d"
)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir)Source;$(ProjectDir)vcpkg_installed\x64-windows\include;$(ProjectDir)Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>d3d11.lib;
dxgi.lib
;d3dcompiler.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>@echo Copying content folders...
xcopy "$(ProjectDir)Tools\*.*" "$(OutDir)Tools\" /Y /I /E
xcopy "$(ProjectDir)Docs\*.*" "$(OutDir)Docs\" /Y /I /E
xcopy "$(ProjectDir)Content\*.*" "$(OutDir)Content\" /Y /I /E


call "$(ProjectDir)Tools\move_shaders.bat" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>@echo Cleaning ALL contents from output directory...
if exist "$(OutDir)" (
  del /f /s /q "$(OutDir)*.*"
  for /d %%d in ("$(OutDir)*") do rd /s /q "%%d"
)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir)Source;$(ProjectDir)vcpkg_installed\x64-windows\include;$(ProjectDir)Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>d3d11.lib;
dxgi.lib
;d3dcompiler.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>@echo Copying content folders...
xcopy "$(ProjectDir)Tools\*.*" "$(OutDir)Tools\" /Y /I /E
xcopy "$(ProjectDir)Docs\*.*" "$(OutDir)Docs\" /Y /I /E
xcopy "$(ProjectDir)Content\*.*" "$(OutDir)Content\" /Y /I /E


call "$(ProjectDir)Tools\move_shaders.bat" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>@echo Cleaning ALL contents from output directory...
if exist "$(OutDir)" (
  del /f /s /q "$(OutDir)*.*"
  for /d %%d in ("$(OutDir)*") do rd /s /q "%%d"
)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir)Source;$(ProjectDir)vcpkg_installed\x64-windows\include;$(ProjectDir)Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>d3d11.lib;
dxgi.lib
;d3dcompiler.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>@echo Copying content folders...
xcopy "$(ProjectDir)Tools\*.*" "$(OutDir)Tools\" /Y /I /E
xcopy "$(ProjectDir)Docs\*.*" "$(OutDir)Docs\" /Y /I /E
xcopy "$(ProjectDir)Content\*.*" "$(OutDir)Content\" /Y /I /E


call "$(ProjectDir)Tools\move_shaders.bat" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>@echo Cleaning ALL contents from output directory...
if exist "$(OutDir)" (
  del /f /s /q "$(OutDir)*.*"
  for /d %%d in ("$(OutDir)*") do rd /s /q "%%d"
)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Source\Graphics\DirectX11\DX11Geometry.cpp" />
    <ClCompile Include="Source\Graphics\DirectX11\DX11Graphics.cpp" />
    <ClCompile Include="Source\Graphics\DirectX11\DX11IndexBuffer.cpp" />
    <ClCompile Include="Source\Graphics\DirectX11\DX11Shader.cpp" />
    <ClCompile Include="Source\Graphics\DirectX11\DX11VertexBuffer.cpp" />
    <ClCompile Include="Source\main.cpp" />
    <ClCompile Include="Source\Core\AppWindow.cpp" />
    <ClCompile Include="Source\Core\Engine.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="KKAMEngine.rc" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Include\Common\Common.h" />
    <ClInclude Include="Include\Common\ImGuiConsole.h" />
    <ClInclude Include="Include\Core\AppWindow.h" />
    <ClInclude Include="Include\Core\Engine.h" />
    <ClInclude Include="Include\Graphics\DirectX11\DX11Geometry.h" />
    <ClInclude Include="Include\Graphics\DirectX11\DX11Graphics.h" />
    <ClInclude Include="Include\Graphics\DirectX11\DX11IndexBuffer.h" />
    <ClInclude Include="Include\Graphics\DirectX11\DX11Shader.h" />
    <ClInclude Include="Include\Graphics\DirectX11\DX11VertexBuffer.h" />
    <ClInclude Include="Include\Graphics\IGeometry.h" />
    <ClInclude Include="Include\Graphics\IGraphics.h" />
    <ClInclude Include="Include\Graphics\IIndexBuffer.h" />
    <ClInclude Include="Include\Graphics\IShader.h" />
    <ClInclude Include="Include\Graphics\IVertexBuffer.h" />
    <ClInclude Include="resource.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="Docs\lgpl-3.0.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
    <None Include="Tools\move_shaders.bat" />
    <None Include="vcpkg.json" />
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="Content\Shaders\Custom\VertexShader.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Vertex</ShaderType>
    </FxCompile>
    <FxCompile Include="Content\Shaders\Default\Basic.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vertex</ShaderType>
    </FxCompile>
    <FxCompile Include="Content\Shaders\Default\BasicPixel.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
    </FxCompile>
  </ItemGroup>
  <ItemGroup>
    <Image Include="KKAMEngine.ico" />
    <Image Include="small.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>